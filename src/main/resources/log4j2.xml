<?xml version="1.0" encoding="UTF-8"?>
<!--
	Logging is configured:

	1. To display warnings or above from Log4j itself, these appear on stderr
	2. To re-read configuration within 30 seconds when this file changes
	3. To provide two appenders
	   (a) Console. Writes to stdout
	   (b) RollingFile. Set up with the cron triggering policy to trigger every day at 23:45, time zone depends on server set up.
	       Logs are all written under the logs folder. Archives are stored zipped up in a sub-directory based on the current year and month.
	       All files under the base directory that match the "*/app-*.log.gz" glob and are 30 days old or older are deleted at rollover time

	Useful Logging Categories available for use in specifying loggers
	1. com.refinitiv.pricestreamadapter.PriceLifeCycleLogger. Refer to comments against logger for it for more details.
	2. PriceStreamAdapter.fix - used for logging of fix messages to and from Price Stream and events quickfixj infers.
	                            Category names used are defined as part of the quickfixj configuration, refer to appropriate properties file
	   The following (full) category names are children of this allowing finer sub-division are:
	   PriceStreamAdapter.fix.incoming.${PriceStreamCompID}   The fix message from ${PriceStreamCompID} taken off the wire, use INFO to see
	   PriceStreamAdapter.fix.outgoing.${PriceStreamCompID}   The fix message to ${PriceStreamCompID} placed on the wire, use INFO to see
	   PriceStreamAdapter.fix.events                          The quickfix event (e.g. log off), use INFO to see
	   In the above ${PriceStreamCompID} is the string name for the PriceStream instance (e.g. differs for SIT and PROD instance of PriceStream)
	3.com.thomsonreuters.ema - used for logging generated by the EMAJ libraries push the aggregrated prices out to Elecktron (over a TRCC connection)
	4.com.refinitiv.pricestreamadapter - used to enable the writing of logging data from the classes of the logic written for the PriceStreamAdapter
	       (note that PriceLifeCycleLogger logging is handled separately, see above)

	Additional Logging Categories (these are only relevant to automated integration tests run by maven verify)
	1. PriceStreamFake.fix - used for logging of fix messages in and out and events quickfixj infers
	                         Category names used are defined as part of the quickfixj configuration, refer to code
	   The following (full) category names are children of this allowing finer sub-division are:
	   PriceStreamFake.fix.incoming.${TargetCompID}   The fix message from ${TargetCompID} taken off the wire, use INFO to see
	   PriceStreamFake.fix.outgoing.${TargetCompID}   The fix message to ${TargetCompID} placed on the wire, use INFO to see
	   PriceStreamFake.fix.events                      The quickfix event (e.g. log off), use INFO to see

	   In the above ${TargetCompID} is the string sent as the name of the sending connection

-->
<Configuration status="warn" dest="err" monitorInterval="30">
    <Appenders>
        <!-- Appender that writes to console -->
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </Console>

        <!-- Appender that writes to file. Set up described at top of this file -->
        <RollingFile name="RollingFile" fileName="logs/app.log"
                     filePattern="logs/$${date:yyyy-MM}/app-%d{yyyy-MM-dd}.log.gz">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
            <CronTriggeringPolicy schedule="0 45 23 * * ?"/>
            <DefaultRolloverStrategy>
                <Delete basePath="logs" maxDepth="2">
                    <IfFileName glob="*/app-*.log.gz" />
                    <IfLastModified age="30d" />
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>

    </Appenders>
    <Loggers>
        <!--
            Root (top parent) logger. Currently set for errors and above to go to console and log file
        -->
        <Root level="info">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="RollingFile"/>
        </Root>
    </Loggers>
</Configuration>